name: Unit Tests # name of the test

on:
 push:
   branches: [ main ]  # or 'master' if that's your primary branch name
 pull_request:
   branches: [ main ] # the Github Action will activate "on" the event that you "push" to the repo

jobs: # the things being executed
 tests: # the name of your status check, will become important when you do branch protection
   runs-on: ubuntu-latest # which device on Github's server that you are running the Actions on
   env:
    REACT_APP_FIREBASE_KEY: ${{ secrets.REACT_APP_FIREBASE_KEY }}
    REACT_APP_FIREBASE_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_DOMAIN }}
    REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
    REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
    REACT_APP_FIREBASE_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID }}
    REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
    REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
    ATLAS_URI: ${{ secrets.ATLAS_URI }}
    DB_NAME: ${{ secrets.DB_NAME }}
   steps:
     - uses: actions/checkout@v4 # using version 4 of Actions
     - name: Install Dependencies
       run: npm install --legacy-peer-deps
       working-directory: frontend/React-App
     - name: Unit Test
       run: npm test # the actual testing line
       working-directory: frontend/React-App
